-- create-db.sql

CREATE TABLE pizza(
	`id` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`name` VARCHAR(30) NOT NULL,
	`unit_price_ex_tax` DECIMAL(6,2),
	`tax_rate100` DECIMAL(6,2)
);
CREATE TABLE address(
	`id` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`line1` VARCHAR(30) NOT NULL,
	`line2` VARCHAR(30) NOT NULL,
	`zip` VARCHAR(30) NOT NULL,
	`city` VARCHAR(30) NOT NULL
);
CREATE TABLE ingredient(
	`id` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`label` VARCHAR(30) NOT NULL
);
CREATE TABLE payment_solution(
	`id` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`label` VARCHAR(30) NOT NULL
);
CREATE TABLE phone(
	`id` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`number` VARCHAR(30) NOT NULL
);
CREATE TABLE composition(
	`pizza_id` SMALLINT UNSIGNED NOT NULL
		FOREIGN KEY (pizza_id) REFERENCES pizza(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`ingredient_id` SMALLINT UNSIGNED NOT NULL
        FOREIGN KEY(ingredient_id) REFERENCES ingredient(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`quantity` DECIMAL(6,2)
);
CREATE TABLE restaurant(
	`id` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`address_id` SMALLINT UNSIGNED NOT NULL
		FOREIGN KEY (address_id) REFERENCES  address(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`name` VARCHAR(30) NOT NULL
);
CREATE TABLE stock(
	`ingredient_id` SMALLINT UNSIGNED NOT NULL
        FOREIGN KEY(ingredient_id) REFERENCES ingredient(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`restaurant_id` SMALLINT UNSIGNED NOT NULL
        FOREIGN KEY(restaurant_id) REFERENCES restaurant(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`quantity` DECIMAL(6,2),
	`unit` VARCHAR(30) NOT NULL
);
CREATE TABLE employee(
	`id` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`home_address_id` SMALLINT UNSIGNED NOT NULL
        FOREIGN KEY(home_address_id) REFERENCES address(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`phone_id` SMALLINT UNSIGNED NOT NULL
		FOREIGN KEY (_id) REFERENCES  (id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`restaurant_id` SMALLINT UNSIGNED NOT NULL
        FOREIGN KEY(restaurant_id) REFERENCES restaurant(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`1st_name` VARCHAR(30) NOT NULL,
	`name` VARCHAR(30) NOT NULL
);
CREATE TABLE client(
	`id` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`billing_address_id` SMALLINT UNSIGNED NOT NULL
        FOREIGN KEY(billing_address_id) REFERENCES address(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`delivery_address_id` SMALLINT UNSIGNED NOT NULL
        FOREIGN KEY(delivery_address_id) REFERENCES address(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
	`phone_id` SMALLINT UNSIGNED NOT NULL
        FOREIGN KEY(phone_id) REFERENCES phone(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`first_name` VARCHAR(30) NOT NULL,
	`name` VARCHAR(30) NOT NULL
);
CREATE TABLE order(
	`id` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`employee_id` SMALLINT UNSIGNED NOT NULL
        FOREIGN KEY(employee_id) REFERENCES employee(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`client_id` SMALLINT UNSIGNED NOT NULL
        FOREIGN KEY(client_id) REFERENCES client(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`invoice_num` VARCHAR(30) NOT NULL,
	`date` DATE,
	`status` VARCHAR(30) NOT NULL
);
CREATE TABLE payment_history(
	`payment_solution_id` SMALLINT UNSIGNED NOT NULL
        FOREIGN KEY(payment_solution_id) REFERENCES payment_solution(id),
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`order_id` SMALLINT UNSIGNED NOT NULL
        FOREIGN KEY(order_id) REFERENCES order(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`amount` DECIMAL(6,2),
	`date` DATE
);
CREATE TABLE line_order(
	`id` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`order_id` SMALLINT UNSIGNED NOT NULL
        FOREIGN KEY(order_id) REFERENCES order(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`pizza_id` SMALLINT UNSIGNED NOT NULL
        FOREIGN KEY(pizza_id) REFERENCES pizza(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	`date` DATE,
	`quantity` INTEGER,
	`size` VARCHAR(30) NOT NULL,
	`tax_rate100` DECIMAL(6,2),
	`unit_price_ex_tax` DECIMAL(6,2)
);
